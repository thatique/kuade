// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: model.proto

/*
	Package model is a generated protocol buffer package.

	It is generated from these files:
		model.proto

	It has these top-level messages:
		PasswordChangeToken
*/
package model

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type UserStatus int32

const (
	UserStatus_INACTIVE UserStatus = 0
	UserStatus_ACTIVE   UserStatus = 1
	UserStatus_LOCKED   UserStatus = 2
)

var UserStatus_name = map[int32]string{
	0: "INACTIVE",
	1: "ACTIVE",
	2: "LOCKED",
}
var UserStatus_value = map[string]int32{
	"INACTIVE": 0,
	"ACTIVE":   1,
	"LOCKED":   2,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}
func (UserStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorModel, []int{0} }

type UserRole int32

const (
	UserRole_INDIVIDUAL UserRole = 0
	UserRole_VENDOR     UserRole = 1
	UserRole_STAFF      UserRole = 2
	UserRole_SUPERUSER  UserRole = 3
)

var UserRole_name = map[int32]string{
	0: "INDIVIDUAL",
	1: "VENDOR",
	2: "STAFF",
	3: "SUPERUSER",
}
var UserRole_value = map[string]int32{
	"INDIVIDUAL": 0,
	"VENDOR":     1,
	"STAFF":      2,
	"SUPERUSER":  3,
}

func (x UserRole) String() string {
	return proto.EnumName(UserRole_name, int32(x))
}
func (UserRole) EnumDescriptor() ([]byte, []int) { return fileDescriptorModel, []int{1} }

type PasswordChangeToken struct {
	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password  []byte `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (m *PasswordChangeToken) Reset()                    { *m = PasswordChangeToken{} }
func (m *PasswordChangeToken) String() string            { return proto.CompactTextString(m) }
func (*PasswordChangeToken) ProtoMessage()               {}
func (*PasswordChangeToken) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{0} }

func (m *PasswordChangeToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PasswordChangeToken) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PasswordChangeToken) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *PasswordChangeToken) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*PasswordChangeToken)(nil), "kuade.app.models.PasswordChangeToken")
	golang_proto.RegisterType((*PasswordChangeToken)(nil), "kuade.app.models.PasswordChangeToken")
	proto.RegisterEnum("kuade.app.models.UserStatus", UserStatus_name, UserStatus_value)
	golang_proto.RegisterEnum("kuade.app.models.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("kuade.app.models.UserRole", UserRole_name, UserRole_value)
	golang_proto.RegisterEnum("kuade.app.models.UserRole", UserRole_name, UserRole_value)
}
func (m *PasswordChangeToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PasswordChangeToken) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Password) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Password)))
		i += copy(dAtA[i:], m.Password)
	}
	if m.CreatedAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreatedAt))
	}
	return i, nil
}

func encodeVarintModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *PasswordChangeToken) Size() (n int) {
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovModel(uint64(m.CreatedAt))
	}
	return n
}

func sovModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozModel(x uint64) (n int) {
	return sovModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PasswordChangeToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PasswordChangeToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PasswordChangeToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = append(m.Password[:0], dAtA[iNdEx:postIndex]...)
			if m.Password == nil {
				m.Password = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModel   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("model.proto", fileDescriptorModel) }
func init() { golang_proto.RegisterFile("model.proto", fileDescriptorModel) }

var fileDescriptorModel = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xcb, 0x4a, 0xc3, 0x40,
	0x18, 0x85, 0x9d, 0xd6, 0x94, 0xe4, 0xb7, 0xca, 0x30, 0x16, 0x0c, 0x05, 0x43, 0x70, 0x15, 0xba,
	0x88, 0xa0, 0x2f, 0x60, 0x4c, 0x52, 0x08, 0x96, 0xb4, 0x4c, 0x2e, 0x0b, 0x37, 0x32, 0x9a, 0x21,
	0x4a, 0xd3, 0x4e, 0x48, 0xa6, 0xb8, 0xf1, 0xe1, 0x5c, 0xba, 0xf4, 0x11, 0x24, 0xbe, 0x88, 0xe4,
	0x82, 0xbb, 0xef, 0x7c, 0x33, 0xe7, 0x5f, 0x1c, 0x38, 0xd9, 0x89, 0x8c, 0x17, 0x76, 0x59, 0x09,
	0x29, 0x08, 0xde, 0x1e, 0x58, 0xc6, 0x6d, 0x56, 0x96, 0x76, 0xa7, 0xeb, 0xf9, 0x2c, 0x17, 0xb9,
	0xe8, 0x1e, 0xaf, 0x5b, 0xea, 0xff, 0x5d, 0x7d, 0xc0, 0xf9, 0x86, 0xd5, 0xf5, 0xbb, 0xa8, 0x32,
	0xf7, 0x95, 0xed, 0x73, 0x1e, 0x8b, 0x2d, 0xdf, 0x93, 0x19, 0x28, 0xb2, 0x05, 0x1d, 0x99, 0xc8,
	0xd2, 0x68, 0x1f, 0x5a, 0xcb, 0x77, 0xec, 0xad, 0xd0, 0x47, 0xbd, 0xed, 0x02, 0x99, 0x83, 0x5a,
	0x0e, 0x27, 0xf4, 0xb1, 0x89, 0xac, 0x29, 0xfd, 0xcf, 0xe4, 0x12, 0xe0, 0xa5, 0xe2, 0x4c, 0xf2,
	0xec, 0x89, 0x49, 0xfd, 0xd8, 0x44, 0xd6, 0x98, 0x6a, 0x83, 0x71, 0xe4, 0xe2, 0x06, 0x20, 0xa9,
	0x79, 0x15, 0x49, 0x26, 0x0f, 0x35, 0x99, 0x82, 0x1a, 0x84, 0x8e, 0x1b, 0x07, 0xa9, 0x8f, 0x8f,
	0x08, 0xc0, 0x64, 0x60, 0xd4, 0xf2, 0x6a, 0xed, 0x3e, 0xf8, 0x1e, 0x1e, 0x2d, 0xee, 0x40, 0x6d,
	0x3b, 0x54, 0x14, 0x9c, 0x9c, 0x01, 0x04, 0xa1, 0x17, 0xa4, 0x81, 0x97, 0x38, 0xab, 0xbe, 0x93,
	0xfa, 0xa1, 0xb7, 0xa6, 0x18, 0x11, 0x0d, 0x94, 0x28, 0x76, 0x96, 0x4b, 0x3c, 0x22, 0xa7, 0xa0,
	0x45, 0xc9, 0xc6, 0xa7, 0x49, 0xe4, 0x53, 0x3c, 0xbe, 0xbf, 0xf8, 0x6a, 0x0c, 0xf4, 0xdd, 0x18,
	0xe8, 0xa7, 0x31, 0xd0, 0xe7, 0xaf, 0x81, 0x1e, 0x95, 0x6e, 0xa3, 0xe7, 0x49, 0xb7, 0xc9, 0xed,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x5a, 0xeb, 0xd3, 0x4a, 0x01, 0x00, 0x00,
}
